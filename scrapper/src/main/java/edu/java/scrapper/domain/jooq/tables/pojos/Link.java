/*
 * This file is generated by jOOQ.
 */

package edu.java.scrapper.domain.jooq.tables.pojos;

import jakarta.validation.constraints.Size;
import java.beans.ConstructorProperties;
import java.io.Serializable;
import java.time.LocalDateTime;
import javax.annotation.processing.Generated;
import org.jetbrains.annotations.NotNull;
import org.jetbrains.annotations.Nullable;

/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "https://www.jooq.org",
        "jOOQ version:3.18.9"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({"all", "unchecked", "rawtypes", "this-escape"})
public class Link implements Serializable {

    private static final long serialVersionUID = 1L;

    private Long id;
    private String uri;
    private String description;
    private LocalDateTime createdAt;
    private LocalDateTime updatedAt;
    private String createdBy;
    private String updatedBy;
    private String title;
    private String etag;
    private LocalDateTime lastCheckedAt;
    private String type;

    public Link() {
    }

    public Link(Link value) {
        this.id = value.id;
        this.uri = value.uri;
        this.description = value.description;
        this.createdAt = value.createdAt;
        this.updatedAt = value.updatedAt;
        this.createdBy = value.createdBy;
        this.updatedBy = value.updatedBy;
        this.title = value.title;
        this.etag = value.etag;
        this.lastCheckedAt = value.lastCheckedAt;
        this.type = value.type;
    }

    @ConstructorProperties({"id", "uri", "description", "createdAt", "updatedAt", "createdBy", "updatedBy", "title",
        "etag", "lastCheckedAt", "type"})
    public Link(
        @Nullable Long id,
        @NotNull String uri,
        @Nullable String description,
        @Nullable LocalDateTime createdAt,
        @Nullable LocalDateTime updatedAt,
        @Nullable String createdBy,
        @Nullable String updatedBy,
        @Nullable String title,
        @Nullable String etag,
        @Nullable LocalDateTime lastCheckedAt,
        @Nullable String type
    ) {
        this.id = id;
        this.uri = uri;
        this.description = description;
        this.createdAt = createdAt;
        this.updatedAt = updatedAt;
        this.createdBy = createdBy;
        this.updatedBy = updatedBy;
        this.title = title;
        this.etag = etag;
        this.lastCheckedAt = lastCheckedAt;
        this.type = type;
    }

    /**
     * Getter for <code>LINK.ID</code>.
     */
    @Nullable
    public Long getId() {
        return this.id;
    }

    /**
     * Setter for <code>LINK.ID</code>.
     */
    public void setId(@Nullable Long id) {
        this.id = id;
    }

    /**
     * Getter for <code>LINK.URI</code>.
     */
    @jakarta.validation.constraints.NotNull
    @Size(max = 256)
    @NotNull
    public String getUri() {
        return this.uri;
    }

    /**
     * Setter for <code>LINK.URI</code>.
     */
    public void setUri(@NotNull String uri) {
        this.uri = uri;
    }

    /**
     * Getter for <code>LINK.DESCRIPTION</code>.
     */
    @Size(max = 128)
    @Nullable
    public String getDescription() {
        return this.description;
    }

    /**
     * Setter for <code>LINK.DESCRIPTION</code>.
     */
    public void setDescription(@Nullable String description) {
        this.description = description;
    }

    /**
     * Getter for <code>LINK.CREATED_AT</code>.
     */
    @Nullable
    public LocalDateTime getCreatedAt() {
        return this.createdAt;
    }

    /**
     * Setter for <code>LINK.CREATED_AT</code>.
     */
    public void setCreatedAt(@Nullable LocalDateTime createdAt) {
        this.createdAt = createdAt;
    }

    /**
     * Getter for <code>LINK.UPDATED_AT</code>.
     */
    @Nullable
    public LocalDateTime getUpdatedAt() {
        return this.updatedAt;
    }

    /**
     * Setter for <code>LINK.UPDATED_AT</code>.
     */
    public void setUpdatedAt(@Nullable LocalDateTime updatedAt) {
        this.updatedAt = updatedAt;
    }

    /**
     * Getter for <code>LINK.CREATED_BY</code>.
     */
    @Size(max = 64)
    @Nullable
    public String getCreatedBy() {
        return this.createdBy;
    }

    /**
     * Setter for <code>LINK.CREATED_BY</code>.
     */
    public void setCreatedBy(@Nullable String createdBy) {
        this.createdBy = createdBy;
    }

    /**
     * Getter for <code>LINK.UPDATED_BY</code>.
     */
    @Size(max = 64)
    @Nullable
    public String getUpdatedBy() {
        return this.updatedBy;
    }

    /**
     * Setter for <code>LINK.UPDATED_BY</code>.
     */
    public void setUpdatedBy(@Nullable String updatedBy) {
        this.updatedBy = updatedBy;
    }

    /**
     * Getter for <code>LINK.TITLE</code>.
     */
    @Size(max = 128)
    @Nullable
    public String getTitle() {
        return this.title;
    }

    /**
     * Setter for <code>LINK.TITLE</code>.
     */
    public void setTitle(@Nullable String title) {
        this.title = title;
    }

    /**
     * Getter for <code>LINK.ETAG</code>.
     */
    @Size(max = 256)
    @Nullable
    public String getEtag() {
        return this.etag;
    }

    /**
     * Setter for <code>LINK.ETAG</code>.
     */
    public void setEtag(@Nullable String etag) {
        this.etag = etag;
    }

    /**
     * Getter for <code>LINK.LAST_CHECKED_AT</code>.
     */
    @Nullable
    public LocalDateTime getLastCheckedAt() {
        return this.lastCheckedAt;
    }

    /**
     * Setter for <code>LINK.LAST_CHECKED_AT</code>.
     */
    public void setLastCheckedAt(@Nullable LocalDateTime lastCheckedAt) {
        this.lastCheckedAt = lastCheckedAt;
    }

    /**
     * Getter for <code>LINK.TYPE</code>.
     */
    @Size(max = 16)
    @Nullable
    public String getType() {
        return this.type;
    }

    /**
     * Setter for <code>LINK.TYPE</code>.
     */
    public void setType(@Nullable String type) {
        this.type = type;
    }

    @Override
    public boolean equals(Object obj) {
        if (this == obj) {
            return true;
        }
        if (obj == null) {
            return false;
        }
        if (getClass() != obj.getClass()) {
            return false;
        }
        final Link other = (Link) obj;
        if (this.id == null) {
            if (other.id != null) {
                return false;
            }
        } else if (!this.id.equals(other.id)) {
            return false;
        }
        if (this.uri == null) {
            if (other.uri != null) {
                return false;
            }
        } else if (!this.uri.equals(other.uri)) {
            return false;
        }
        if (this.description == null) {
            if (other.description != null) {
                return false;
            }
        } else if (!this.description.equals(other.description)) {
            return false;
        }
        if (this.createdAt == null) {
            if (other.createdAt != null) {
                return false;
            }
        } else if (!this.createdAt.equals(other.createdAt)) {
            return false;
        }
        if (this.updatedAt == null) {
            if (other.updatedAt != null) {
                return false;
            }
        } else if (!this.updatedAt.equals(other.updatedAt)) {
            return false;
        }
        if (this.createdBy == null) {
            if (other.createdBy != null) {
                return false;
            }
        } else if (!this.createdBy.equals(other.createdBy)) {
            return false;
        }
        if (this.updatedBy == null) {
            if (other.updatedBy != null) {
                return false;
            }
        } else if (!this.updatedBy.equals(other.updatedBy)) {
            return false;
        }
        if (this.title == null) {
            if (other.title != null) {
                return false;
            }
        } else if (!this.title.equals(other.title)) {
            return false;
        }
        if (this.etag == null) {
            if (other.etag != null) {
                return false;
            }
        } else if (!this.etag.equals(other.etag)) {
            return false;
        }
        if (this.lastCheckedAt == null) {
            if (other.lastCheckedAt != null) {
                return false;
            }
        } else if (!this.lastCheckedAt.equals(other.lastCheckedAt)) {
            return false;
        }
        if (this.type == null) {
            if (other.type != null) {
                return false;
            }
        } else if (!this.type.equals(other.type)) {
            return false;
        }
        return true;
    }

    @Override
    public int hashCode() {
        final int prime = 31;
        int result = 1;
        result = prime * result + ((this.id == null) ? 0 : this.id.hashCode());
        result = prime * result + ((this.uri == null) ? 0 : this.uri.hashCode());
        result = prime * result + ((this.description == null) ? 0 : this.description.hashCode());
        result = prime * result + ((this.createdAt == null) ? 0 : this.createdAt.hashCode());
        result = prime * result + ((this.updatedAt == null) ? 0 : this.updatedAt.hashCode());
        result = prime * result + ((this.createdBy == null) ? 0 : this.createdBy.hashCode());
        result = prime * result + ((this.updatedBy == null) ? 0 : this.updatedBy.hashCode());
        result = prime * result + ((this.title == null) ? 0 : this.title.hashCode());
        result = prime * result + ((this.etag == null) ? 0 : this.etag.hashCode());
        result = prime * result + ((this.lastCheckedAt == null) ? 0 : this.lastCheckedAt.hashCode());
        result = prime * result + ((this.type == null) ? 0 : this.type.hashCode());
        return result;
    }

    @Override
    public String toString() {
        StringBuilder sb = new StringBuilder("Link (");

        sb.append(id);
        sb.append(", ").append(uri);
        sb.append(", ").append(description);
        sb.append(", ").append(createdAt);
        sb.append(", ").append(updatedAt);
        sb.append(", ").append(createdBy);
        sb.append(", ").append(updatedBy);
        sb.append(", ").append(title);
        sb.append(", ").append(etag);
        sb.append(", ").append(lastCheckedAt);
        sb.append(", ").append(type);

        sb.append(")");
        return sb.toString();
    }
}
